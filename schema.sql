create table
  public.artists (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    name text not null,
    genre public.genre not null,
    email text not null,
    password text not null,
    constraint artists_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.artist_songs (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    artist_id bigint null,
    song_id bigint null,
    constraint artist_songs_pkey primary key (id),
    constraint artist_songs_artist_id_fkey foreign key (artist_id) references artists (id),
    constraint artist_songs_song_id_fkey foreign key (song_id) references songs (id)
  ) tablespace pg_default;

create table
  public.albums (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    title text not null,
    genre public.genre not null,
    artist_id bigint not null,
    constraint albums_pkey primary key (id),
    constraint albums_artist_id_fkey foreign key (artist_id) references artists (id)
  ) tablespace pg_default;

create table
  public.album_songs (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    song_id bigint null,
    album_id bigint null,
    constraint album_songs_pkey primary key (id),
    constraint album_songs_album_id_fkey foreign key (album_id) references albums (id),
    constraint album_songs_song_id_fkey foreign key (song_id) references songs (id)
  ) tablespace pg_default;

create table
  public.songs (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    title text not null,
    genre public.genre null,
    duration integer not null,
    constraint songs_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.comments (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    type public.type not null,
    comment text null,
    user_id bigint null,
    constraint Comments_pkey primary key (id),
    constraint comments_user_id_fkey foreign key (user_id) references listeners (id)
  ) tablespace pg_default;

create table
  public.feedback (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    rating integer null,
    feedback_type public.feedback_type null,
    user_id bigint null,
    song_id bigint null,
    album_id bigint null,
    constraint feedback_pkey primary key (id),
    constraint feedback_album_id_fkey foreign key (album_id) references albums (id),
    constraint feedback_song_id_fkey foreign key (song_id) references songs (id),
    constraint feedback_user_id_fkey foreign key (user_id) references listeners (id)
  ) tablespace pg_default;

create table
  public.playlists (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    creator_id bigint null,
    title text not null,
    mood public.mood null,
    constraint playlists_pkey primary key (id),
    constraint playlists_creator_id_fkey foreign key (creator_id) references listeners (id)
  ) tablespace pg_default;

create table
  public.playlist_songs (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    playlist_id bigint null,
    song_id bigint null,
    constraint playlist_songs_pkey primary key (id),
    constraint playlist_songs_playlist_id_fkey foreign key (playlist_id) references playlists (id),
    constraint playlist_songs_song_id_fkey foreign key (song_id) references songs (id)
  ) tablespace pg_default;

create table
  public.listeners (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    name text not null,
    username text not null,
    email text not null,
    password text not null,
    constraint users_pkey primary key (id)
  ) tablespace pg_default;

insert into
  artists (name, genre, email, password)
values
  (
    'Bill Wurtz',
    'Indie',
    'billwurtz@example.com',
    'DontGoToSchool'
  );

insert into
  listeners (name, username, email, password)
values
  (
    'John Doe',
    'johndoe',
    'johndoe@example.com',
    'password123'
  ),
  (
    'Jane Doe',
    'janedoe',
    'janedoe@example.com',
    'password456'
  );

insert into
  feedback (rating, feedback_type, user_id, song_id)
values
  (
    5,
    'originality', 
    1, 
    11
  );

insert into
  feedback (rating, feedback_type, user_id, album_id)
values
  (
    3,
    'overall', 
    2, 
    2
  );